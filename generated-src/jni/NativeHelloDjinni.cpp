// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from hellodjinni.djinni

#include "NativeHelloDjinni.hpp"  // my header
#include "Marshal.hpp"
#include "NativeHelloDjinni.hpp"

namespace djinni_generated {

NativeHelloDjinni::NativeHelloDjinni() : ::djinni::JniInterface<::hellodjinni::HelloDjinni, NativeHelloDjinni>("com/mycompany/hellodjinni/HelloDjinni$CppProxy") {}

NativeHelloDjinni::~NativeHelloDjinni() = default;


CJNIEXPORT void JNICALL Java_com_mycompany_hellodjinni_HelloDjinni_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<djinni::CppProxyHandle<::hellodjinni::HelloDjinni>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_mycompany_hellodjinni_HelloDjinni_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::hellodjinni::HelloDjinni::create();
        return ::djinni::release(::djinni_generated::NativeHelloDjinni::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_mycompany_hellodjinni_HelloDjinni_00024CppProxy_native_1getHelloDjinni(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::hellodjinni::HelloDjinni>(nativeRef);
        auto r = ref->get_hello_djinni();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jint JNICALL Java_com_mycompany_hellodjinni_HelloDjinni_00024CppProxy_native_1getOne(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::hellodjinni::HelloDjinni>(nativeRef);
        auto r = ref->get_one();
        return ::djinni::release(::djinni::I32::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
